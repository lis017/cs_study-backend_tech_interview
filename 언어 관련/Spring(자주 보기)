면접용----------------------------------------------------------------------------------
웹에서 int와 integer를 나누는 의미
-> integer는 null표현 가능(db가 비어있다던가)
int는 비울수없음(기본값이 0임)

entity는 뭐하는앤가?
-> db와 직접매핑.
 db의 구조대로 자료형을 쓰는 느낌

Spring DI/IoC는 어떻게 동작하나요?
-> IoC(제어의 역전)은 프로그램의 제어 흐름을 직접 제어하는 것이 아니라 
  외부에서 관리하는 것
->DI(의존관계 주입)은         //Spring 프레임워크에서 지원하는 IoC의 형태로
클래스 사이의 의존관계를 빈 설정 정보를 바탕으로 컨테이너가 자동으로 연결
->스프링에서는 스프링 컨테이너 ApplicationContext를 이용하여 설정 정보를 생성, 등록하고
필요한 객체를 생성자 혹은 setter를 통해 주입합니다.
//복습

Spring Bean이란 무엇인가요?
-> IoC 컨테이너 안에 들어있는 객체
//복습

스프링 Bean의 생성 과정을 설명해주세요.
->  객체 생성 → 의존 설정 → 초기화 → 사용 → 소멸 과정의 생명주기
//복습

스프링 Bean의 Scope에 대해서 설명해주세요.
->빈 스코프는 빈이 존재할 수 있는 범위를 뜻하며 싱글톤, 프로토타입, request, session, application 등이 있습니다.
//복습

IoC 컨테이너의 역할은 무엇이 있을까요?
-> 애플리케이션 실행시점에 빈 객체를 인스턴스화하고 DI 한 후에 최초로 애플리케이션을 기동할 빈 하나를 제공해준다
//복습

DI 종류는 어떤것이 있고, 이들의 차이는 무엇인가요?
-> 생성자 주입, Setter를 이용한 메소드 매개 변수 주입, 필드 주입이 있다.
-> 생성자 주입은 불변, 필수 의존관계에 사용합니다.
-> Setter주입은 선택, 변경 가능성이 있는 의존관계에 사용
-> 필드 주입은 외부에서 변경이 불가능하여 테스트 하기 힘듭니다.
//복습

Autowiring 과정에 대해서 설명해주세요.
-> 컨테이너에서 타입(인터페이스 또는 오브젝트)을 이용해 의존 대상 객체를 검색하고 할당할 수 있는 빈 객체를 찾아 주입한다
//복습

Spring Web MVC의 Dispatcher Servlet의 동작 원리에 대해서 간단히 설명해주세요.
1. 핸들러 조회, 핸들러 어댑터 조회
2. 위에서 찾은 핸들러 어댑터의 handle() 메서드를 호출
3. 뷰 렌더링 호출
4. 뷰 렌더링
//복습

프론트 컨트롤러 패턴이란 무엇인가요?
-> 개발과 유지보수의 효율성이 증가하고 모든 요청에 대해 보안, 국제화, 라우팅 및 로그와 같은 일반적인 기능을
  한 곳에서 캡슐화할 수 있는 것
//복습

Servlet Filter와 Spring Interceptor의 차이는 무엇인가요?
-> Filter는 데이터 변환, XML 문서 변경, 사용자 인증, 자원 접근에 대한 로깅 등에 사용합니다.
-> Interceptor의 경우 AOP를 흉내내거나, Spring 애플리케이션에서 전역적인 전후처리 로직에서 예외를 사용하도록 할 때 사용합니다.
//복습

Spring에서 CORS 에러를 해결하기 위한 방법을 설명해주세요.
-> Servlet Filter를 사용하여 커스텀한 Cors 설정하거나
-> Controller 클래스에 @Crossorigin 어노테이션을 통해 해결할 수 있습니다.
//복습

Bean/Component 어노테이션에 대해서 설명해주시고, 둘의 차이점에 대해 설명해주세요.
-> @Bean : 메서드에서 반환하는 객체를 인스턴스 객체로 1회 생성
-> @Component : 개발자가 작성한 class를 기반으로 실행시점에 인스턴스 객체를 1회 생성
//복습

POJO란 무엇인가요? Spring Framework에서 POJO는 무엇이 될 수 있을까요?
-> POJO는 프레임워크 인터페이스, 클래스를 구현하거나 확장하지 않은 단순한 클래스로 Java에서 제공하는 API 외에 종속되지 않습니다.
-> 스프링에서는 도메인과 비즈니스 로직을 수행하는 대상이 POJO대상이 될 수 있습니다.
//복습

Spring Web MVC에서 요청 마다 Thread가 생성되어 Controller를 통해 요청을 수행할텐데, 어떻게 1개의 Controller만 생성될 수 있을까요?
-> 생성한 Controller 클래스에 대한 정보가 Method Area(메서드 영역)에 올라감
  모든 Thread가 객체의 메서드를 공유할 수 있기 때문에 Controller는 1개만 생성됩니다.

Filter는 Servlet의 스펙이고, Interceptor는 Spring MVC의 스펙입니다.
Spring Application에서 Filter와 Interceptor를 통해 예외를 처리할 경우 어떻게 해야 할까요?
-> Filter는 ErrorController에서 처리
Interceptor는 @ControllerAdvice를 적용해서 처리
//복습

Spring Application을 구동할 때 메서드를 실행시키는 방법에 대해 설명해주세요.
->일반적으로 CommandLineRunner, ApplicationRunner를 구현한 클래스를 만들어서 실행시키는 2가지 방법이 있습니다.
//복습

의존성과 설정값을 생성자 인자로 주입해야 하는 이유에 대해 설명해주세요.
-> 모든 의존성을 생성자를 통해 주입하면, 인스턴스 생성 시 즉시 어떠한 동작을 실행할 수 있습니다. 또한 추가적인 설정은 필요하지 않으며, 뜻하지 않게 의존성과 설정값을 빠뜨리는 일이 발생하지 않고 테스트에도 용이합니다.
//복습












면접용x 자소서o--------------------------------------------------------------------------
Spring Boot를 쓰는 이유는?
-> 비즈니스 로직을 제외한 Spring 구성은 Spring이 관리한다. 개발자는 비즈니스 로직에만 집중 가능
  //스프링을 더 쉽게 이용하기 위한 도구

면접용x------
-추상 클래스(Abstract Class)는 추상 메서드를 선언해 놓고 상속을 통해 자식 클래스에서 메서드를 완성하도록 유도하는 클래스이다.
